{"version":3,"sources":["../../lib/TokenManager.ts"],"names":["removeNils","warn","clone","AuthSdkError","isRefreshTokenError","validateToken","isLocalhost","isIE11OrLess","TOKEN_STORAGE_NAME","SdkClock","isIDToken","isAccessToken","isRefreshToken","ID_TOKEN_STORAGE_KEY","ACCESS_TOKEN_STORAGE_KEY","REFRESH_TOKEN_STORAGE_KEY","TokenService","DEFAULT_OPTIONS","autoRenew","autoRemove","storage","undefined","expireEarlySeconds","storageKey","syncStorage","_storageEventDelay","EVENT_EXPIRED","EVENT_RENEWED","EVENT_ADDED","EVENT_REMOVED","EVENT_ERROR","defaultState","expireTimeouts","renewPromise","TokenManager","constructor","sdk","options","emitter","Object","assign","storageOptions","secure","storageProvider","storageType","storageManager","getTokenStorage","clock","create","state","on","bind","off","start","service","stop","getOptions","getExpireTime","token","expireTime","expiresAt","hasExpired","now","emitExpired","key","emit","emitRenewed","freshToken","oldToken","emitAdded","emitRemoved","emitError","error","emitEventsForCrossTabsStorageUpdate","newValue","oldValue","oldTokens","getTokensFromStorageValue","newTokens","keys","forEach","newToken","JSON","stringify","clearExpireEventTimeout","clearTimeout","clearExpireEventTimeoutAll","prototype","hasOwnProperty","call","setExpireEventTimeout","expireEventWait","Math","max","expireEventTimeout","setTimeout","setExpireEventTimeoutAll","tokenStorage","getStorage","resetExpireEventTimeoutAll","add","setStorage","getSync","get","getTokensSync","tokens","accessToken","idToken","refreshToken","getTokens","getStorageKeyByType","type","filter","setTokens","accessTokenCb","idTokenCb","refreshTokenCb","handleAdded","tokenCb","handleRemoved","idTokenKey","accessTokenKey","refreshTokenKey","existingTokens","remove","removedToken","renewToken","renew","existingPromise","e","Promise","reject","then","oldTokenStorage","catch","err","name","tokenKey","finally","clear","clearStorage","value","parse","updateRefreshToken","addWarningsForLocalhost"],"mappings":"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","sourcesContent":["/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, warn, clone } from './util';\nimport { AuthSdkError } from './errors';\nimport { isRefreshTokenError, validateToken  } from './oidc/util';\nimport { isLocalhost, isIE11OrLess } from './features';\nimport { TOKEN_STORAGE_NAME } from './constants';\nimport SdkClock from './clock';\nimport {\n  EventEmitter,\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  StorageOptions,\n  StorageType,\n  OktaAuth,\n  StorageProvider,\n  TokenManagerErrorEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken\n} from './types';\nimport { ID_TOKEN_STORAGE_KEY, ACCESS_TOKEN_STORAGE_KEY, REFRESH_TOKEN_STORAGE_KEY } from './constants';\nimport { TokenService } from './services/TokenService';\n\nconst DEFAULT_OPTIONS = {\n  autoRenew: true,\n  autoRemove: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME,\n  syncStorage: true,\n  _storageEventDelay: 0\n};\nexport const EVENT_EXPIRED = 'expired';\nexport const EVENT_RENEWED = 'renewed';\nexport const EVENT_ADDED = 'added';\nexport const EVENT_REMOVED = 'removed';\nexport const EVENT_ERROR = 'error';\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Record<string, Promise<Token>>;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: {}\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuth;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n  private service: TokenService;\n\n  on: (event: string, handler: TokenManagerErrorEventHandler | TokenManagerEventHandler, context?: object) => void;\n  off: (event: string, handler?: TokenManagerErrorEventHandler | TokenManagerEventHandler) => void;\n\n  constructor(sdk: OktaAuth, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n\n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (isIE11OrLess()) {\n      options._storageEventDelay = options._storageEventDelay || 1000;\n    }\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage(storageOptions);\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n\n    this.on = this.emitter.on.bind(this.emitter);\n    this.off = this.emitter.off.bind(this.emitter);\n  }\n\n  start() {\n    if (this.service) {\n      this.stop();\n    }\n    this.service = new TokenService(this, this.getOptions());\n    this.service.start();\n  }\n  \n  stop() {\n    if (this.service) {\n      this.service.stop();\n      this.service = null;\n    }\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    var expireTime = token.expiresAt - this.options.expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  emitEventsForCrossTabsStorageUpdate(newValue, oldValue) {\n    const oldTokens = this.getTokensFromStorageValue(oldValue);\n    const newTokens = this.getTokensFromStorageValue(newValue);\n    Object.keys(newTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (JSON.stringify(oldToken) !== JSON.stringify(newToken)) {\n        this.emitAdded(key, newToken);\n      }\n    });\n    Object.keys(oldTokens).forEach(key => {\n      const oldToken = oldTokens[key];\n      const newToken = newTokens[key];\n      if (!newToken) {\n        this.emitRemoved(key, oldToken);\n      }\n    });\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    delete this.state.renewPromise[key];\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key) {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key) {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  // eslint-disable-next-line complexity\n  setTokens(\n    { accessToken, idToken, refreshToken }: Tokens, \n    accessTokenCb?: Function, \n    idTokenCb?: Function,\n    refreshTokenCb?: Function\n  ): void {\n    const handleAdded = (key, token, tokenCb) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      if (tokenCb) {\n        tokenCb(key, token);\n      }\n    };\n    const handleRemoved = (key, token, tokenCb) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      if (tokenCb) {\n        tokenCb(key, token);\n      }\n    };\n  \n    if (idToken) {\n      validateToken(idToken, 'idToken');\n    }\n    if (accessToken) {\n      validateToken(accessToken, 'accessToken');\n    }\n    if (refreshToken) {\n      validateToken(refreshToken, 'refreshToken');\n    }\n    const idTokenKey = this.getStorageKeyByType('idToken') || ID_TOKEN_STORAGE_KEY;\n    const accessTokenKey = this.getStorageKeyByType('accessToken') || ACCESS_TOKEN_STORAGE_KEY;\n    const refreshTokenKey = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n  \n    // add token to storage\n    const tokenStorage = { \n      ...(idToken && { [idTokenKey]: idToken }),\n      ...(accessToken && { [accessTokenKey]: accessToken }),\n      ...(refreshToken && { [refreshTokenKey]: refreshToken })\n    };\n    this.storage.setStorage(tokenStorage);\n  \n    // emit event and start expiration timer\n    const existingTokens = this.getTokensSync();\n    if (idToken) {\n      handleAdded(idTokenKey, idToken, idTokenCb);\n    } else if (existingTokens.idToken) {\n      handleRemoved(idTokenKey, existingTokens.idToken, idTokenCb);\n    }\n    if (accessToken) {\n      handleAdded(accessTokenKey, accessToken, accessTokenCb);\n    } else if (existingTokens.accessToken) {\n      handleRemoved(accessTokenKey, existingTokens.accessToken, accessTokenCb);\n    }\n    if (refreshToken) {\n      handleAdded(refreshTokenKey, refreshToken, refreshTokenCb);\n    } else if (existingTokens.refreshToken) {\n      handleRemoved(refreshTokenKey, existingTokens.refreshToken, refreshTokenCb);\n    }\n  }\n  /* eslint-enable max-params */\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  renew(key): Promise<Token> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    var existingPromise = this.state.renewPromise[key];\n    if (existingPromise) {\n      return existingPromise;\n    }\n  \n    try {\n      var token = this.getSync(key);\n      if (!token) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  \n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    this.state.renewPromise[key] = this.sdk.token.renew(token)\n      .then(freshToken => {\n        // store and emit events for freshToken\n        const oldTokenStorage = this.storage.getStorage();\n        this.remove(key);\n        this.add(key, freshToken);\n        this.emitRenewed(key, freshToken, oldTokenStorage[key]);\n        return freshToken;\n      })\n      .catch(err => {\n        // If renew fails, remove token and emit error\n        if (isRefreshTokenError(err) || err.name === 'OAuthError' || err.name === 'AuthSdkError') {\n          // remove token from storage\n          this.remove(key);\n          \n          err.tokenKey = key;\n          this.emitError(err);\n        }\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        delete this.state.renewPromise[key];\n      });\n  \n    return this.state.renewPromise[key];\n  }\n  \n  clear() {\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n  }\n  \n  getTokensFromStorageValue(value) {\n    let tokens;\n    try {\n      tokens = JSON.parse(value) || {};\n    } catch (e) {\n      tokens = {};\n    }\n    return tokens;\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n  }\n  \n}\n\nif (isLocalhost()) {\n  (function addWarningsForLocalhost() {\n    const { add } = TokenManager.prototype;\n    Object.assign(TokenManager.prototype, {\n      add: function(key, token: Token) {\n        warn(\n          'Use setTokens() instead if you want to add a set of tokens at same time.\\n' + \n          'It prevents current tab from emitting unnecessary StorageEvent,\\n' + \n          'which may cause false-positive authState change cross tabs.'\n        );\n        add.call(this, key, token);\n      }\n    });\n  })();\n}\n"],"file":"TokenManager.js"}